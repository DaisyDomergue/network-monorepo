---
# Split out DataUnion tests
name: Client â€“ DataUnions

# Be sure to update both workflow files if you edit any env or trigger config
env:
  CI: true
  DEBUG_COLORS: true
  DEBUG: "Streamr*"
on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    # run every day at 00:00
    - cron: '0 0 * * *'
concurrency:
  group: client-dataunions-build-${{ github.head_ref }}
  cancel-in-progress: true
defaults:
  run:
    working-directory: packages/client

jobs:
  data-unions-integration:
    # temporary disabling of DU tests
    if: ${{ false }}
    name: DataUnions Integration Test
    runs-on: ubuntu-latest
    env:
      TEST_REPEATS: 1

    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.5.0
        with:
          cache-dependency-path: package-lock.json
          cache: 'npm'
          node-version-file: '.nvmrc'
      - uses: actions/cache@v2
        name: Cache node_modules/.cache
        with:
          path: node_modules/.cache
          key: node_modules_cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
      - name: bootstrap-pkg
        working-directory: './'
        run: |
          npm install -g npm@8 --prefer-offline --no-audit
          npm run bootstrap-pkg streamr-client
      - name: Start Streamr Docker Stack
        uses: streamr-dev/streamr-docker-dev-action@v1.0.0-alpha.3
        with:
          services-to-start: "core-api nginx graph-deploy-streamregistry-subgraph parity-node0 parity-sidechain-node0  init-keyspace brokers trackers"
      - name: Run Test
        run: npm run test-integration-dataunions
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.0.2
        with:
          dest: 'logs'
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v2.3.0
        with:
          name: docker-logs--${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt}}
          path: 'logs'
      - name: Stop Streamr Docker Stack
        if: always()
        run: |
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)
